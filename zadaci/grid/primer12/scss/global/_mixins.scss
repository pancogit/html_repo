// mixins

// set color on all elements in block including links
@mixin set_block_color($color: null) {
    color: $color;

    a {
        color: $color;
    }
}

// reset list
@mixin reset_list() {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

// set width and height to full - don't use this if paddings are set to not overflow box
@mixin set_width_height_full($width: 100%,
                             $height: 100%) {
    display: block; // set element to be block to alter box dimensions

    width: $width;
    height: $height;
}

// set borders
@mixin set_borders($border: null,
                   $border-style: null,
                   $border-color: null,
                   $border-width: null,

                   $border-top-style: null,
                   $border-top-color: null,
                   $border-top-width: null,

                   $border-bottom-style: null,
                   $border-bottom-color: null,
                   $border-bottom-width: null,

                   $border-left-style: null,
                   $border-left-color: null,
                   $border-left-width: null,

                   $border-right-style: null,
                   $border-right-color: null,
                   $border-right-width: null) {
    @if $border != null { // set shorthand or individual properties
        border: $border;
    }
    @else if ($border-style != null) or ($border-color != null) or ($border-width != null) {
        border-style: $border-style;
        border-color: $border-color;
        border-width: $border-width;
    }
    @else {
        border-top-style: $border-top-style;
        border-top-color: $border-top-color;
        border-top-width: $border-top-width;

        border-bottom-style: $border-bottom-style;
        border-bottom-color: $border-bottom-color;
        border-bottom-width: $border-bottom-width;

        border-left-style: $border-left-style;
        border-left-color: $border-left-color;
        border-left-width: $border-left-width;

        border-right-style: $border-right-style;
        border-right-color: $border-right-color;
        border-right-width: $border-right-width;
    }
}

// set grid template
@mixin set_grid_template($grid: grid,
                         $grid-template-areas: null,
                         $grid-template-rows: null,
                         $grid-template-columns: null) {

    display: $grid;

    grid-template-areas: $grid-template-areas;
    grid-template-rows: $grid-template-rows;
    grid-template-columns: $grid-template-columns;
}

// set grid gaps
@mixin set_grid_gaps($gap: null,
                     $row-gap: null,
                     $column-gap: null) {
    
    @if $gap != normal { // set either gaps shorthand or individualy rows/cols
        gap: $gap;
    }
    @else {
        row-gap: $row-gap;
        column-gap: $column-gap;
    }
}

// align grid container
@mixin align_grid($justify-content: null,
                  $justify-items: null,
                  $align-content: null,
                  $align-items: null) {
    justify-content: $justify-content;
    justify-items: $justify-items;

    align-content: $align-content;
    align-items: $align-items;
}

// align grid item
@mixin align_grid_item($justify-self: null,
                       $align-self: null) {
    justify-self: $justify-self;
    align-self: $align-self;
}

// attach grid elements to grid rows/cols
@mixin attach_rows_cols($grid-row-start: null,
                        $grid-row-end: null,
                        $grid-row: null,
                        
                        $grid-column-start: null,
                        $grid-column-end: null,
                        $grid-column: null) {
    grid-row-start: $grid-row-start;
    grid-row-end: $grid-row-end;
    grid-row: $grid-row;
    
    grid-column-start: $grid-column-start;
    grid-column-end: $grid-column-end;
    grid-column: $grid-column;
}